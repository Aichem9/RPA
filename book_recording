import pandas as pd
df = pd.read_csv("/book_recording_sample.csv") #일단 불러옴

#전처리
#pd.options.display.max_colwidth = 50
#필요 없는 줄 날리기, 세번째 행부터, 6번째 열까지만 가져오기
df = pd.DataFrame(df.values[3:,:6])
df.columns = ["name","section", "year", "grade","sem","book"]#column 이름 지정
df = df.dropna(how='all')#모든 칸이 nan인 행 지우기
df = df.fillna(method='ffill') #행별로 이름 채우기(전 행의 이름과 동일함)
df.drop(df[df['name'] =='이  름'].index, inplace = True) #페이지 넘어갈 때 있는 열이름 삭제
original = df.values.tolist() #list로
pd.options.display.max_colwidth = 100

######################## 1. 완전히 책 이름과 저자명이 일치하는 경우

for student in df.name.unique():
  #학생별로 도서명 문자열로 담기
  temp = df[df.name==student]
  all_book = temp.book.tolist()
  book_list_incomplete = []
  for book_by_row in all_book :   
    book_list_incomplete = book_list_incomplete+book_by_row.split("), ")

  #print("1. " , book_list_incomplete)

  # 빈 문자열 원소 제거 및 괄호 처리하기
  book_list = []
  for book in book_list_incomplete:
    if len(book)==0:
      continue
    elif book[-1]==")":
      book_list.append(book)
    else:
      book_list.append(book+")")
  #print("2. " , book_list)

  # 중복 횟수 세기
  book_count={}
  lists = book_list
  for i in lists:
      try: book_count[i] += 1
      except: book_count[i]=1
  #print("3. " , book_count)

  # 중복 횟수가 2 이상인 아이템의 key만 담기
  book_duplicated = []
  for k, v in book_count.items():
      if v >= 2: 
          book_duplicated.append(k)
  #print("4. " , book_duplicated)

  # 출력하기
  if len(book_duplicated)>0:
    print('\n',student, "학생의 중복된 항목이 있습니다....:", book_duplicated)
    print('다음 영역 중에서 찾아보세요.')
    for i in range(len(book_duplicated)):
      display(temp[temp['book'].str.contains(book_duplicated[i][:2])]) 
  else:
    continue
    
    
    
######################## 2. 오타 등이 포함되어있어 1로는 찾아지지 않을 때


pd.options.display.max_colwidth = 1000

for student in df.name.unique():
  #학생별로 도서명 문자열로 담기
  temp = df[df.name==student]
  all_book = temp.book.tolist()
  ####################################
  book_list_incomplete = []
  for book_by_row in all_book :   
    book_split = book_by_row.replace("("," ").replace(")"," ").replace(","," ")
    book_list_incomplete = book_list_incomplete + book_split.split(" ")
  book_list_incomplete = list(filter(None, book_list_incomplete))
  
  # 중복 횟수 세기
  book_count={}
  lists = book_list_incomplete
  for i in lists:
      try: book_count[i] += 1
      except: book_count[i]=1

  book_duplicated = []
  for k, v in book_count.items():
      if (v >= 2) & (len(k)>1): 
          book_duplicated.append([k,v])

  if len(book_duplicated)>0:
    print(student, "학생의 중복된 항목이 있습니다....:", book_duplicated)
    print('다음 영역 중에서 찾아보세요.')
    for i in range(len(book_duplicated)):
      print('\n중복된 단어와 중복 횟수 : ',book_duplicated[i])
      display(temp[temp['book'].str.contains(book_duplicated[i][0])]) 
  else:
    continue
